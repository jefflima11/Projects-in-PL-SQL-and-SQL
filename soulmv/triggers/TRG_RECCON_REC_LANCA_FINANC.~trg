CREATE OR REPLACE TRIGGER TRG_RECCON_REC_LANCA_FINANC
  BEFORE INSERT OR DELETE
  ON RECCON_REC 
  FOR EACH ROW
BEGIN

   DECLARE

      CURSOR cur_mes_ano_fech_cont (

         p_cd_multi_empresa   IN   dbamv.config_fcct.cd_multi_empresa%TYPE,

         p_dt_referencia      IN   dbamv.reccon_rec.dt_recebimento%TYPE

      )

      IS

         SELECT Decode(DBAMV.FNC_RETORNA_COMP_FECHADA(p_cd_multi_empresa, p_dt_referencia, USER, 'CREC'), 'ABERTO', 'A', 'FECHADO', 'F') tp_situacao_mes,

                m.sn_lanca_reccon_rec

           FROM dbamv.mes_ano_fech_financ m

          WHERE m.cd_multi_empresa = p_cd_multi_empresa

            AND m.dt_ano = TRUNC (p_dt_referencia, 'YYYY')

            AND m.dt_mes = TO_NUMBER (TO_CHAR (p_dt_referencia, 'MM'));

      CURSOR cur_multi_empresa (p_cd_itcon_rec IN dbamv.itcon_rec.cd_itcon_rec%TYPE)

      IS

         SELECT c.cd_multi_empresa

           FROM dbamv.con_rec c, dbamv.itcon_rec i

          WHERE c.cd_con_rec = i.cd_con_rec AND i.cd_itcon_rec = p_cd_itcon_rec;

      v_cd_multi_empresa      dbamv.config_fcct.cd_multi_empresa%TYPE;

      v_dt_referencia         dbamv.pagcon_pag.dt_pagamento%TYPE;

      v_sn_lanca_reccon_rec   dbamv.mes_ano_fech_financ.sn_lanca_reccon_rec%TYPE;

      v_tp_situacao_mes       dbamv.mes_ano_fech_financ.tp_situacao_mes%TYPE;

      v_cd_itcon_rec          dbamv.itcon_rec.cd_itcon_rec%TYPE;

   BEGIN

      IF DELETING

      THEN

         v_cd_itcon_rec := :OLD.cd_itcon_rec;

      ELSE

         v_cd_itcon_rec := :NEW.cd_itcon_rec;

      END IF;

      OPEN cur_multi_empresa (v_cd_itcon_rec);

      FETCH cur_multi_empresa

       INTO v_cd_multi_empresa;

      CLOSE cur_multi_empresa;

      FOR i IN 1 .. 2 LOOP

         IF DELETING

         THEN

            IF i = 1

            THEN

               v_dt_referencia := :OLD.dt_recebimento;

            ELSE

               v_dt_referencia := :OLD.dt_estorno;

            END IF;

         ELSE

            IF i = 1

            THEN

               v_dt_referencia := :NEW.dt_recebimento;

            ELSE

               v_dt_referencia := :NEW.dt_estorno;

            END IF;

         END IF;



         OPEN cur_mes_ano_fech_cont (v_cd_multi_empresa, v_dt_referencia);

         FETCH cur_mes_ano_fech_cont

          INTO v_tp_situacao_mes,

               v_sn_lanca_reccon_rec;

         CLOSE cur_mes_ano_fech_cont;

         IF (NVL (v_tp_situacao_mes, 'X') = 'X') THEN

            raise_application_error

               (-20012,

                pkg_rmi_traducao.extrair_pkg_msg

                        ('MSG_4',

                         'TRG_RECCON_REC_LANCA_FINANC',

                            '[REC] %s Motivo: Não existe mês finenceiro cadastrado no período %s %s Ação: Efetuar cadastro do Mês do Financeiro. %s Local: FNFI / Exercício / Abertura',

                         arg_list (CHR (10),TO_CHAR (v_dt_referencia, 'DD/MM/YYYY'),CHR (10),CHR (10))

                        )

               );

         ELSIF     v_tp_situacao_mes = 'F' AND Nvl(NVL (:NEW.tp_lancamento, :OLD.tp_lancamento), 'X') <> 'T' THEN --22299

            IF v_sn_lanca_reccon_rec = 'S'

            THEN
               IF INSERTING

               THEN

                  raise_application_error

                     (-20012,

                      pkg_rmi_traducao.extrair_pkg_msg

                               ('MSG_1',

                                'TRG_RECCON_REC_LANCA_FINANC',

                                   '[REC] %s Motivo: [01] Inclusão inválida, mês do financeiro fechado.004 %s Ação: Efetuar abertura do Mês do Financeiro fechado. %s Local: FNFI / Exercício / Fechamento',arg_list(chr(10),chr(10),chr(10)))

                     );

               ELSIF (    NOT UPDATING ('DT_ESTORNO')

                      AND NOT UPDATING ('VL_ESTORNO')

                      AND NOT UPDATING ('NM_USUARIO')

                      AND NOT UPDATING ('CD_MOTIVO_CANC')

                      AND NOT UPDATING ('DS_ESTORNO')

                      AND NOT UPDATING ('CD_PROCESSO_SEC')

                      AND NOT UPDATING ('NM_RESPONSAVEL')

                      AND NOT UPDATING ('NR_ID_RESPONSAVEL')

                      AND NOT UPDATING ('CD_EXP_CONTAB_ESTORNO_BAIXA')

                      AND NOT UPDATING ('CD_EXP_CONTABILIDADE')

                      AND i = 1

                     )

               THEN

                  raise_application_error

                     (-20010,

                      pkg_rmi_traducao.extrair_pkg_msg

                              ('MSG_2',

                               'TRG_RECCON_REC_LANCA_FINANC',

                                  '[REC] %s Motivo: Alteração inválida, mês do financeiro fechado. %s Ação: Efetuar abertura do Mês do Financeiro fechado. %s Local: FNFI / Exercício / Fechamento',arg_list(chr(10),chr(10),chr(10)))

                     );

               ELSIF (    NOT UPDATING ('CD_EXP_CONTAB_ESTORNO_BAIXA')

                      AND NOT UPDATING ('CD_EXP_CONTABILIDADE')

                      AND v_dt_referencia IS NOT NULL
                      AND NOT UPDATING ('NM_RESPONSAVEL')
                      AND NOT UPDATING ('NR_ID_RESPONSAVEL')

                      AND i = 2

                     )

               THEN

                  raise_application_error

                     (-20010,

                      pkg_rmi_traducao.extrair_pkg_msg

                              ('MSG_2',

                               'TRG_RECCON_REC_LANCA_FINANC',

                                  '[REC] %s Motivo: Alteração inválida, mês do financeiro fechado. %s Ação: Efetuar abertura do Mês do Financeiro fechado. %s Local: FNFI / Exercício / Fechamento',arg_list(chr(10),chr(10),chr(10)))

                     );

               ELSIF DELETING

               THEN

                  raise_application_error

                     (-20010,

                      pkg_rmi_traducao.extrair_pkg_msg

                               ('MSG_3',

                                'TRG_RECCON_REC_LANCA_FINANC',

                                   '[REC]  %s Motivo: Exclusão inválida, mês do financeiro fechado. %s Ação: Efetuar abertura do Mês do Financeiro fechado. %s Local: FNFI / Exercício / Fechamento',arg_list(chr(10),chr(10),chr(10)))

                     );

               END IF;

            END IF;

         END IF;

      END LOOP;

   END;

END trg_reccon_rec_lanca_financ;
ALTER TRIGGER "DBAMV"."TRG_RECCON_REC_LANCA_FINANC" ENABLE
/
